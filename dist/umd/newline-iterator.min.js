!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?module.exports=n():"function"==typeof define&&define.amd?define(n):(e="undefined"!=typeof globalThis?globalThis:e||self).newlineIterator=n()}(this,(function(){"use strict";var e="undefined"!=typeof Symbol&&Symbol.iterator;return function(n){var t=0,r={next:function(){if(t>=n.length)return{value:void 0,done:!0};var e=function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,t=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(n<0)throw new Error("Unexpected negative offset");if(n>e.length)throw new Error("Offset is longer than the string. Offset: ".concat(n,". String: ").concat(e.length));for(;n<e.length;){var r=e[n];if("\n"===r)return t?[n,1]:n;if("\r"===r)return t?[n,"\n"===e[n+1]?2:1]:n;n++}return t?[-1,0]:-1}(n,t,!0),r=e[0],o=e[1];r<0&&(r=n.length,o=0);var i=n.substr(t,r-t);return t=r+o,{value:i,done:!1}}};return e&&(r[Symbol.iterator]=function(){return this}),r}}));
//# sourceMappingURL=newline-iterator.min.js.map
