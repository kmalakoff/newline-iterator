{"version":3,"sources":["index.ts"],"sourcesContent":["import indexOfNewline from 'index-of-newline';\n\nconst hasIterator = typeof Symbol !== 'undefined' && Symbol.iterator;\n\n/**\n * Create a newline iterator recognizing CR, LF, and CRLF using the Symbol.iterator interface\n *\n * @param string The string to iterate through\n *\n * ```typescript\n * import newlineIterator from \"newline-iterator\";\n *\n * const iterator = newlineIterator(\"some\\r\\nstring\\ncombination\\r\");\n * const results = [];\n * for (const line of iterator) results.push(line);\n * console.log(results); // [\"some\", \"string\", \"combination\"];\n * ```\n */\nexport default function newlineIterator(string: string): IterableIterator<string> {\n  let offset = 0;\n  const iterator = {\n    next(): IteratorResult<string, boolean> {\n      if (offset >= string.length) return { value: undefined, done: true };\n      let [index, skip] = indexOfNewline(string, offset, true) as number[];\n      if (index < 0) {\n        index = string.length;\n        skip = 0;\n      }\n      const line = string.substr(offset, index - offset);\n      offset = index + skip;\n      return { value: line, done: false };\n    },\n  };\n\n  if (hasIterator) {\n    iterator[Symbol.iterator] = function (): Iterator<string> {\n      return this;\n    };\n  }\n\n  return iterator as IterableIterator<string>;\n}\n"],"names":["indexOfNewline","hasIterator","Symbol","iterator","newlineIterator","string","offset","next","length","value","undefined","done","index","skip","line","substr"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,cAAc,MAAM,kBAAkB,CAAC;AAE9C,IAAMC,WAAW,GAAG,OAAOC,MAAM,KAAK,WAAW,IAAIA,MAAM,CAACC,QAAQ,AAAC;AAErE;;;;;;;;;;;;;GAaG,CACH,eAAe,SAASC,eAAe,CAACC,MAAc,EAA4B;IAChF,IAAIC,MAAM,GAAG,CAAC,AAAC;IACf,IAAMH,QAAQ,GAAG;QACfI,IAAI,EAAJA,SAAAA,IAAI,GAAoC;YACtC,IAAID,MAAM,IAAID,MAAM,CAACG,MAAM,EAAE,OAAO;gBAAEC,KAAK,EAAEC,SAAS;gBAAEC,IAAI,EAAE,IAAI;aAAE,CAAC;YACrE,IAAoBX,GAAoC,kBAApCA,cAAc,CAACK,MAAM,EAAEC,MAAM,EAAE,IAAI,CAAC,IAAA,EAAnDM,KAAK,GAAUZ,GAAoC,GAA9C,EAAEa,IAAI,GAAIb,GAAoC,GAAxC,AAAqD;YACrE,IAAIY,KAAK,GAAG,CAAC,EAAE;gBACbA,KAAK,GAAGP,MAAM,CAACG,MAAM,CAAC;gBACtBK,IAAI,GAAG,CAAC,CAAC;aACV;YACD,IAAMC,IAAI,GAAGT,MAAM,CAACU,MAAM,CAACT,MAAM,EAAEM,KAAK,GAAGN,MAAM,CAAC,AAAC;YACnDA,MAAM,GAAGM,KAAK,GAAGC,IAAI,CAAC;YACtB,OAAO;gBAAEJ,KAAK,EAAEK,IAAI;gBAAEH,IAAI,EAAE,KAAK;aAAE,CAAC;SACrC;KACF,AAAC;IAEF,IAAIV,WAAW,EAAE;QACfE,QAAQ,CAACD,MAAM,CAACC,QAAQ,CAAC,GAAG,WAA8B;YACxD,OAAO,IAAI,CAAC;SACb,CAAC;KACH;IAED,OAAOA,QAAQ,CAA6B;CAC7C,CAAA"}