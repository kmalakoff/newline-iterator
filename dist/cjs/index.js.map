{"version":3,"sources":["index.ts"],"sourcesContent":["import indexOfNewline from 'index-of-newline';\n\nconst hasIterator = typeof Symbol !== 'undefined' && Symbol.iterator;\n\n/**\n * Create a newline iterator recognizing CR, LF, and CRLF using the Symbol.iterator interface\n *\n * @param string The string to iterate through\n *\n * ```typescript\n * import newlineIterator from \"newline-iterator\";\n *\n * const iterator = newlineIterator(\"some\\r\\nstring\\ncombination\\r\");\n * const results = [];\n * for (const line of iterator) results.push(line);\n * console.log(results); // [\"some\", \"string\", \"combination\"];\n * ```\n */\nexport default function newlineIterator(string: string): IterableIterator<string> {\n  let offset = 0;\n  const iterator = {\n    next(): IteratorResult<string, boolean> {\n      if (offset >= string.length) return { value: undefined, done: true };\n      const args = indexOfNewline(string, offset, true) as number[];\n      let index = args[0];\n      let skip = args[1];\n      if (index < 0) {\n        index = string.length;\n        skip = 0;\n      }\n      const line = string.substr(offset, index - offset);\n      offset = index + skip;\n      return { value: line, done: false };\n    },\n  };\n\n  if (hasIterator) {\n    iterator[Symbol.iterator] = function (): Iterator<string> {\n      return this;\n    };\n  }\n\n  return iterator as IterableIterator<string>;\n}\n"],"names":["newlineIterator","string","offset","iterator","next","length","value","undefined","done","args","indexOfNewline","index","skip","line","substr","hasIterator","Symbol"],"mappings":"AAAA;;;;kBAkBwBA,eAAe;AAlBZ,IAAA,eAAkB,kCAAlB,kBAAkB,EAAA;AAkB9B,SAASA,eAAe,CAACC,MAAc,EAA4B;IAChF,IAAIC,MAAM,GAAG,CAAC,AAAC;IACf,IAAMC,QAAQ,GAAG;QACfC,IAAI,EAAJA,SAAAA,IAAI,GAAoC;YACtC,IAAIF,MAAM,IAAID,MAAM,CAACI,MAAM,EAAE,OAAO;gBAAEC,KAAK,EAAEC,SAAS;gBAAEC,IAAI,EAAE,IAAI;aAAE,CAAC;YACrE,IAAMC,IAAI,GAAGC,CAAAA,GAAAA,eAAc,AAAsB,CAAA,QAAtB,CAACT,MAAM,EAAEC,MAAM,EAAE,IAAI,CAAC,AAAY,AAAC;YAC9D,IAAIS,KAAK,GAAGF,IAAI,CAAC,CAAC,CAAC,AAAC;YACpB,IAAIG,IAAI,GAAGH,IAAI,CAAC,CAAC,CAAC,AAAC;YACnB,IAAIE,KAAK,GAAG,CAAC,EAAE;gBACbA,KAAK,GAAGV,MAAM,CAACI,MAAM,CAAC;gBACtBO,IAAI,GAAG,CAAC,CAAC;aACV;YACD,IAAMC,IAAI,GAAGZ,MAAM,CAACa,MAAM,CAACZ,MAAM,EAAES,KAAK,GAAGT,MAAM,CAAC,AAAC;YACnDA,MAAM,GAAGS,KAAK,GAAGC,IAAI,CAAC;YACtB,OAAO;gBAAEN,KAAK,EAAEO,IAAI;gBAAEL,IAAI,EAAE,KAAK;aAAE,CAAC;SACrC;KACF,AAAC;IAEF,IAAIO,WAAW,EAAE;QACfZ,QAAQ,CAACa,MAAM,CAACb,QAAQ,CAAC,GAAG,WAA8B;YACxD,OAAO,IAAI,CAAC;SACb,CAAC;KACH;IAED,OAAOA,QAAQ,CAA6B;CAC7C;;;;;;AAzCD,IAAMY,WAAW,GAAG,OAAOC,MAAM,KAAK,WAAW,IAAIA,MAAM,CAACb,QAAQ,AAAC"}