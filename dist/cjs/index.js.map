{"version":3,"sources":["index.ts"],"sourcesContent":["import indexOfNewline from 'index-of-newline';\n\nconst hasIterator = typeof Symbol !== 'undefined' && Symbol.iterator;\n\n/**\n * Create a newline iterator recognizing CR, LF, and CRLF using the Symbol.iterator interface\n *\n * @param string The string to iterate through\n *\n * ```typescript\n * import newlineIterator from \"newline-iterator\";\n *\n * const iterator = newlineIterator(\"some\\r\\nstring\\ncombination\\r\");\n * const results = [];\n * for (const line of iterator) results.push(line);\n * console.log(results); // [\"some\", \"string\", \"combination\"];\n * ```\n */\nexport default function newlineIterator(string: string): IterableIterator<string> {\n  let offset = 0;\n  const iterator = {\n    next(): IteratorResult<string, boolean> {\n      if (offset >= string.length) return { value: undefined, done: true };\n      const args = indexOfNewline(string, offset, true) as number[];\n      let index = args[0];\n      let skip = args[1];\n      if (index < 0) {\n        index = string.length;\n        skip = 0;\n      }\n      const line = string.substr(offset, index - offset);\n      offset = index + skip;\n      return { value: line, done: false };\n    },\n  };\n\n  if (hasIterator) {\n    iterator[Symbol.iterator] = function (): Iterator<string> {\n      return this;\n    };\n  }\n\n  return iterator as IterableIterator<string>;\n}\n"],"names":["newlineIterator","hasIterator","Symbol","iterator","string","offset","next","length","value","undefined","done","args","indexOfNewline","index","skip","line","substr"],"mappings":";;;;+BAIA;;;;;;;;;;;;;CAaC,GACD;;;eAAwBA;;;qEAlBG;;;;;;AAE3B,IAAMC,cAAc,OAAOC,WAAW,eAAeA,OAAOC,QAAQ;AAgBrD,SAASH,gBAAgBI,MAAc;IACpD,IAAIC,SAAS;IACb,IAAMF,WAAW;QACfG,MAAAA,SAAAA;YACE,IAAID,UAAUD,OAAOG,MAAM,EAAE,OAAO;gBAAEC,OAAOC;gBAAWC,MAAM;YAAK;YACnE,IAAMC,OAAOC,IAAAA,uBAAc,EAACR,QAAQC,QAAQ;YAC5C,IAAIQ,QAAQF,IAAI,CAAC,EAAE;YACnB,IAAIG,OAAOH,IAAI,CAAC,EAAE;YAClB,IAAIE,QAAQ,GAAG;gBACbA,QAAQT,OAAOG,MAAM;gBACrBO,OAAO;YACT;YACA,IAAMC,OAAOX,OAAOY,MAAM,CAACX,QAAQQ,QAAQR;YAC3CA,SAASQ,QAAQC;YACjB,OAAO;gBAAEN,OAAOO;gBAAML,MAAM;YAAM;QACpC;IACF;IAEA,IAAIT,aAAa;QACfE,QAAQ,CAACD,OAAOC,QAAQ,CAAC,GAAG;YAC1B,OAAO,IAAI;QACb;IACF;IAEA,OAAOA;AACT"}